import Head from 'next/head';
import Image from 'next/image';
import { Inter } from 'next/font/google';
import styles from '@/styles/Home.module.css'
import { useEffect, useState, useRef, useCallback } from 'react';
import { getCuratedPhotos } from './api/hello';
import {Paginate} from '../components/pagination.styles';
import Pagination from '@mui/material/Pagination';
import { Search } from '../components/search.styles';


const inter = Inter({ subsets: ['latin'] })
interface Photos {
  next_page: string;
  previous_page?: string;
  per_page: number;
  photos: Array<object>;
  total_results?: number;
}

export default function Home() {
  const [curatedPhotos, setCuratedPhotos] = useState<any | null>(null);
  const [searchQuery, setSearchQuery] = useState<any | null>(undefined);
  const query = useRef(null);

  const getPhotos = async (page?: number, query?: string) => {
    try {
      const data = await getCuratedPhotos(page)
      console.log('data', data);
      if (!data) {
        console.log('error');
      } else {
        console.log('gucci!')
        setCuratedPhotos(data);
      }

    } catch (e) {
      console.log('error something went wrong', e);
    }

  }
  useEffect(() => {
    getPhotos();
  },[])

  

  const changePage = ((event, page) => {
    console.log('page', page);
    getPhotos(page)
  })

  const querySearch = (query) => {
    query.preventDefault();
    console.log('searchQuery', searchQuery);
    console.log('query', query?.target[0].value);
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.container}>

      <Search>
        <div className='search-container'>
          <form ref={query} onSubmit={querySearch}>
            <input 
              className='search-bar' 
              type="text" 
              placeholder='Search...'
              name="search" 
              value={searchQuery} ></input>
              <button className='search-button'>
                <span className="ico ico-mglass"></span>
              </button>
          </form>
            
        </div>
      </Search>
       
        <section className={styles.flex}>
          {curatedPhotos?.photos.map(photo => {
            return ( 
              <div className={styles.photo_container} key={photo.id}>
                <Image 
                  src={photo.src.large}
                  alt={photo.alt}
                  width={photo.width / 10}
                  height={photo.height / 10}
                  />
              </div>
            )
          })}
        </section>

        {curatedPhotos && 
          <Paginate>
            <Pagination
              count={curatedPhotos.total_results}
              page={curatedPhotos.page}
              siblingCount={3}
              size='large'
              onChange={changePage}
            />
          </Paginate>
        }     
      </main>
    </>
  )
}
